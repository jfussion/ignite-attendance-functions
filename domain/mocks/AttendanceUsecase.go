// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/jfussion/ignite-attendance-cloud-functions/domain"
	mock "github.com/stretchr/testify/mock"
)

// AttendanceUsecase is an autogenerated mock type for the AttendanceUsecase type
type AttendanceUsecase struct {
	mock.Mock
}

// Add provides a mock function with given fields: ctx, attendance
func (_m *AttendanceUsecase) Add(ctx context.Context, attendance domain.Attendance) error {
	ret := _m.Called(ctx, attendance)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, domain.Attendance) error); ok {
		r0 = rf(ctx, attendance)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IncrementCount provides a mock function with given fields: ctx, isMember
func (_m *AttendanceUsecase) IncrementCount(ctx context.Context, isMember bool) error {
	ret := _m.Called(ctx, isMember)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, bool) error); ok {
		r0 = rf(ctx, isMember)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: ctx, id, attendance
func (_m *AttendanceUsecase) Update(ctx context.Context, id string, attendance domain.Attendance) error {
	ret := _m.Called(ctx, id, attendance)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, domain.Attendance) error); ok {
		r0 = rf(ctx, id, attendance)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
